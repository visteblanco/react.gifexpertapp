{"version":3,"sources":["componets/AddCategory.js","helpers/getGifs.js","componets/GifGridItem.js","componets/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cast","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAY,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EACNC,mBAAS,IADH,mBAClCC,EADkC,KACvBC,EADuB,KAiBzC,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAMd,4BAAKD,GACL,2BACIQ,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACmCC,UAAUH,GAD7C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATvB,kBAaXM,GAbW,4CAAF,sDCDPO,EAAc,SAAC,GAAe,IAAdH,EAAa,EAAbA,MAAMV,EAAO,EAAPA,IAE/B,OACI,yBAAKc,UAAU,QACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAW,SAAC,GAAe,IAAdnB,EAAa,EAAbA,SAAa,ECDZ,SAACA,GAAa,IAAD,EACXd,mBAAS,CAC9BqB,KAAK,GACLa,SAAQ,IAHwB,mBAC7BC,EAD6B,KACtBC,EADsB,KAyBpC,OAnBAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEb,UAEb,CAACpB,IASIqB,EDtBuBM,CAAa3B,GAA/Ba,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAKnB,OACI,oCACI,4BAAKpB,GAEJoB,GAAW,yCAEZ,yBAAKJ,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIkB,IAAMlB,EAAIC,IACND,UElBnBmB,EAAe,WAAK,IAAD,EAEO3C,mBAAS,CAAC,cAFjB,mBAErB4C,EAFqB,KAEV7C,EAFU,KAI5B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACIA,SAAUA,EACV4B,IAAK5B,UCZjC+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.fbd57398.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory=({setCategorias}) =>{\r\n    const [inputValue,setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2)\r\n        {\r\n            setCategorias(cast => [inputValue,...cast]);    \r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>{inputValue}</h1>\r\n            <input         \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />        \r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategorias: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs= async(category)=>{\r\n    const url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=RzRUQvOpBjdeO7KGsoznsuUhr9Syt3r9`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\nexport const GifGridItem = ({title,url})=>{\r\n\r\n    return(\r\n        <div className=\"card\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//, { useEffect, useState }\r\nimport {GifGridItem} from './GifGridItem'\r\nexport const GifGrid =  ({category}) =>{\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n  \r\n\r\n\r\n    return(\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p>Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img =>\r\n                        <GifGridItem\r\n                            key= {img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState,useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs= (category) =>{\r\n    const [state, setState]= useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() =>{\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    });      \r\n                }, 1000);\r\n            })\r\n    },[category]); \r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data:[1,2,3,4],\r\n    //         loading:false\r\n    //     })        \r\n    // }, 3000);\r\n\r\n    return state;//{data:[]}\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './componets/AddCategory';\r\nimport {GifGrid} from './componets/GifGrid'\r\n\r\nexport const GifExpertApp = ()=>{    \r\n\r\n    const [categories,setCategorias] = useState(['Samurai X']);\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias}  />\r\n            <hr/>\r\n            <ol>                \r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid \r\n                            category={category} \r\n                            key={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )    \r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}